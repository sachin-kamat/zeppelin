{
    "angularObjects": {
        "angular:shared_process": [],
        "livy:shared_process": [],
        "md:shared_process": [],
        "sh:shared_process": []
    },
    "config": {
        "isZeppelinNotebookCronEnable": false
    },
    "id": "2FFEU1A9R",
    "info": {},
    "name": "Perf/Labs/Pyspark/PartitionProcessing",
    "noteForms": {},
    "noteParams": {},
    "paragraphs": [
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.874",
            "dateFinished": "2020-08-21 23:04:32.299",
            "dateStarted": "2020-08-21 23:04:32.298",
            "dateUpdated": "2020-08-20 09:02:34.731",
            "errorMessage": "",
            "id": "20171105-200834_1116095891",
            "jobName": "paragraph_1597930823874_-1008363730",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n# About This Lab\n**Objective:** This module illustrates the performance benefits of doing partition processing\n**File locations:** /spark-perf/retail\n**Successful outcome:**\n**Before you begin:**\n**Related lessons:** Partition Processing\n\nCopyright \u00a9 2010\u20132020 Cloudera. All rights reserved.\nNot to be reproduced or shared without prior written consent from Cloudera.\n\n---",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.877",
            "dateFinished": "2020-08-21 23:04:32.403",
            "dateStarted": "2020-08-21 23:04:32.402",
            "dateUpdated": "2020-08-20 09:02:34.901",
            "errorMessage": "",
            "id": "20200725-232357_2005906304",
            "jobName": "paragraph_1597930823877_58776578",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n## Overview\n\nThe Spark execution model is defined as a series of transformations on collections, followed by an action.\nNarrow transformations transform individual elements of an RDD/DataFrame.  Wide transformations operate on subsets of the elements.\n\nThe Spark framework usually controls when, where and how the transformations are applied. \nThe Spark developer simply provides the transformations.\n\nSometimes the Spark developer needs to hook into the Spark partition processing.",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.878",
            "dateFinished": "2020-08-21 23:04:32.506",
            "dateStarted": "2020-08-21 23:04:32.505",
            "dateUpdated": "2020-08-20 09:02:35.052",
            "errorMessage": "",
            "id": "20181114-164229_902436001",
            "jobName": "paragraph_1597930823878_-1651465722",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n# Setup\n---",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/sh",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": false,
                    "language": "sh"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.878",
            "dateFinished": "2020-08-21 23:04:32.615",
            "dateStarted": "2020-08-21 23:04:32.607",
            "dateUpdated": "2020-08-20 09:02:35.202",
            "errorMessage": "",
            "id": "20200727-014038_443653381",
            "jobName": "paragraph_1597930823878_-1533812090",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%sh\n\nPYSPARK_PIN_THREAD=true",
            "title": "Environment variable required to use SetJobGroup",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.879",
            "dateFinished": "2020-08-21 23:05:18.869",
            "dateStarted": "2020-08-21 23:04:32.712",
            "dateUpdated": "2020-08-20 09:02:35.352",
            "errorMessage": "",
            "id": "20200725-233036_203835286",
            "jobName": "paragraph_1597930823879_848438210",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nfrom pyspark.sql.functions import udf,col,to_date,lit\nfrom pyspark.sql.types import IntegerType\n#import time",
            "title": "Libraries used in this module",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.879",
            "dateFinished": "2020-08-21 23:05:19.911",
            "dateStarted": "2020-08-21 23:05:18.895",
            "dateUpdated": "2020-08-20 09:02:36.504",
            "errorMessage": "",
            "id": "20200725-232949_284547173",
            "jobName": "paragraph_1597930823879_-56263065",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nretail_dir = \"/spark-perf/retail\"\nsales_untaxed_dir = retail_dir+\"/clean/sales_untaxed\"",
            "title": " HDFS File directories used in this module",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.879",
            "dateFinished": "2020-08-21 23:05:21.027",
            "dateStarted": "2020-08-21 23:05:20.010",
            "dateUpdated": "2020-08-20 09:02:37.653",
            "errorMessage": "",
            "id": "20200725-232349_1842723653",
            "jobName": "paragraph_1597930823879_1171963646",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nsc = spark.sparkContext",
            "title": "Retrieve the Spark context",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.880",
            "dateFinished": "2020-08-21 23:05:21.118",
            "dateStarted": "2020-08-21 23:05:21.117",
            "dateUpdated": "2020-08-20 09:02:38.811",
            "errorMessage": "",
            "id": "20200725-235507_353370633",
            "jobName": "paragraph_1597930823880_-962302218",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n\nThis a simple minded fake tax service used in the partition processing demo.  \nIt simply returns a 10% tax of the price.  It calculates that locally but \nit does make a do-nothing web service call to simulate the performance overhead.",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.880",
            "dateFinished": "2020-08-21 23:05:22.232",
            "dateStarted": "2020-08-21 23:05:21.219",
            "dateUpdated": "2020-08-20 09:02:38.962",
            "errorMessage": "",
            "id": "20200725-235440_2065781586",
            "jobName": "paragraph_1597930823880_-1263731734",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nfrom pyspark.sql import Row\nimport time\n\nclass TaxService:\n    def calculate_sales_tax(self,postalcode,price): \n      # Sleep for 10ms to simulate call\n      time.sleep(.01)\n      return int(round(price * .1))\n    \n    def calculate_sales_tax_batch(self,sales):\n      # Sleep for 10ms to simulate call\n      time.sleep(.01)\n      result = []\n      for sale in sales:\n        dict = sale.asDict()\n        dict[\"sales_tax\"] = int(round(sale.price * .1))\n        result.append(Row(**dict))\n      return result",
            "title": "Define the TaxService class",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/sql",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "sql"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {
                    "0": {
                        "graph": {
                            "commonSetting": {},
                            "height": 300,
                            "mode": "table",
                            "optionOpen": false,
                            "setting": {
                                "table": {
                                    "initialized": false,
                                    "tableColumnTypeState": {
                                        "names": {}
                                    },
                                    "tableGridState": {},
                                    "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                                    "tableOptionValue": {
                                        "showAggregationFooter": false,
                                        "showPagination": false,
                                        "useFilter": false
                                    },
                                    "updated": false
                                }
                            }
                        }
                    }
                },
                "tableHide": true,
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.880",
            "dateFinished": "2020-08-21 23:05:27.439",
            "dateStarted": "2020-08-21 23:05:22.332",
            "dateUpdated": "2020-08-20 09:02:40.113",
            "errorMessage": "",
            "id": "20200726-004020_842858079",
            "jobName": "paragraph_1597930823880_210633678",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%sql\n\nCREATE EXTERNAL TABLE IF NOT EXISTS sparkperf.weblogs (\n  ip_address STRING,\n  client_id INT,\n  date_time STRING,\n  request STRING,\n  status INT,\n  bytes INT,\n  referer STRING,\n  user_agent STRING\n)\nROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.RegexSerDe'\n  WITH SERDEPROPERTIES (\n  \"input.regex\" = \"^([\\\\d.]+) \\\\S+ (\\\\d+) \\\\[(.+?)\\\\] \\\"(.+?)\\\" (\\\\d{3}) (\\\\d+) \\\"(.+?)\\\"\\\\se* \\\"(.+?)\\\".*$\"\n  )\nLOCATION '/spark-perf/ecommerce/weblogs/raw'",
            "title": "Create a Hive tavle to store our weblogs",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.881",
            "dateFinished": "2020-08-21 23:05:27.491",
            "dateStarted": "2020-08-21 23:05:27.489",
            "dateUpdated": "2020-08-20 09:02:41.264",
            "errorMessage": "",
            "id": "20181114-164844_1661453681",
            "jobName": "paragraph_1597930823881_552346808",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n# Demo\n---",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.881",
            "dateFinished": "2020-08-21 23:05:27.593",
            "dateStarted": "2020-08-21 23:05:27.592",
            "dateUpdated": "2020-08-20 09:02:41.415",
            "errorMessage": "",
            "id": "20200725-233919_2064043796",
            "jobName": "paragraph_1597930823881_1582984821",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n\n## Scenario",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.881",
            "dateFinished": "2020-08-21 23:05:38.745",
            "dateStarted": "2020-08-21 23:05:27.694",
            "dateUpdated": "2020-08-20 09:02:41.563",
            "errorMessage": "",
            "id": "20200725-233956_217501228",
            "jobName": "paragraph_1597930823881_-45091115",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nsc.setJobGroup(\"Partition processing\",\"Load the untaxed sales data\")\nsales_untaxed = spark.read.parquet(sales_untaxed_dir).repartition(5)\nsales_untaxed.printSchema()\nsc.setJobGroup(\"Partition processing\",\"Inspect the untaxed sales data\")\nsales_untaxed.limit(5).show()\nsc.setJobGroup(\"Partition processing\",\"Count the untaxed sales data\")\nsales_untaxed.count()\nsales_untaxed.rdd.getNumPartitions()",
            "title": "The module uses sales data that does not include a calculated tax",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.882",
            "dateFinished": "2020-08-21 23:05:38.802",
            "dateStarted": "2020-08-21 23:05:38.800",
            "dateUpdated": "2020-08-20 09:02:48.722",
            "errorMessage": "",
            "id": "20200725-234836_1615878282",
            "jobName": "paragraph_1597930823882_1544104872",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n\nTax calculation can be complicated. \nIt may depend on the location of the sale, the date of the sale and the type of product.\n\nRather than embedding that logic in every application, a better approach is to access a *service* that can calculate the tax. \nAccessing a service is fairly expensive when it involves network communication.\n\nWe have created a simple minded fake tax service for this demo. \nIt simply returns a 10% tax of the price. \nIt calculates that locally but sleeps for 10ms for each service call to simulate the performance overhead.",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.882",
            "dateFinished": "2020-08-21 23:05:42.925",
            "dateStarted": "2020-08-21 23:05:38.903",
            "dateUpdated": "2020-08-20 09:02:48.884",
            "errorMessage": "",
            "id": "20200725-235051_7357649",
            "jobName": "paragraph_1597930823882_-1830256813",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nsc.setJobGroup(\"Partition processing\",\"Inspect first sale\")\nsale = sales_untaxed.take(1)[0]\nsale\n\nTaxService().calculate_sales_tax(sale.postalcode,sale.price)",
            "title": "Let's call the fake TaxService on a single sale",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.883",
            "dateFinished": "2020-08-21 23:05:42.930",
            "dateStarted": "2020-08-21 23:05:42.928",
            "dateUpdated": "2020-08-20 09:02:55.068",
            "errorMessage": "",
            "id": "20200725-235925_406166607",
            "jobName": "paragraph_1597930823883_-140629276",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n\nHow can we add a new ``sales_tax`` column to the sales_untaxed DataFrame?",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.883",
            "dateFinished": "2020-08-21 23:05:44.042",
            "dateStarted": "2020-08-21 23:05:43.030",
            "dateUpdated": "2020-08-20 09:02:55.224",
            "errorMessage": "",
            "id": "20200725-235918_1157762081",
            "jobName": "paragraph_1597930823883_643749875",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\ntaxed_sales = sales_untaxed.withColumn(\"sales_tax\",lit(0))\ntaxed_sales.printSchema()",
            "title": "Ultimately, we'd like our sales data to look like this",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.883",
            "dateFinished": "2020-08-21 23:05:44.140",
            "dateStarted": "2020-08-21 23:05:44.138",
            "dateUpdated": "2020-08-20 09:02:56.379",
            "errorMessage": "",
            "id": "20200726-000115_1858180386",
            "jobName": "paragraph_1597930823883_702721141",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n\n## Problematic approach - call service from a UDF\n\nWe can't even demo this problematic approach on all 3 million + rows.  We'll limit ourselves to a sample",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.884",
            "dateFinished": "2020-08-21 23:05:49.263",
            "dateStarted": "2020-08-21 23:05:44.240",
            "dateUpdated": "2020-08-20 09:02:56.530",
            "errorMessage": "",
            "id": "20200726-000232_2031976059",
            "jobName": "paragraph_1597930823884_1647894077",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nsc.setJobGroup(\"Partition processing\",\"Illustrate this problematic approach on a sample\")\nsales_untaxed.limit(10000).write.parquet(\"spark-perf/sales_sample\",mode=\"overwrite\")",
            "title": "Illustrate this problematic approach on a sample",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.884",
            "dateFinished": "2020-08-21 23:05:50.295",
            "dateStarted": "2020-08-21 23:05:49.285",
            "dateUpdated": "2020-08-20 09:03:03.686",
            "errorMessage": "",
            "id": "20200726-000314_859154436",
            "jobName": "paragraph_1597930823884_-401243638",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nsc.setJobGroup(\"Partition processing\",\"Get the number of partitions of the sample results\")\nsales_sample = spark.read.parquet(\"spark-perf/sales_sample\")\n\nsales_sample.rdd.getNumPartitions()",
            "title": "Get the number of partitions of the sample results",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.884",
            "dateFinished": "2020-08-21 23:07:36.645",
            "dateStarted": "2020-08-21 23:05:50.302",
            "dateUpdated": "2020-08-20 09:03:04.848",
            "errorMessage": "",
            "id": "20200726-000310_1264271436",
            "jobName": "paragraph_1597930823884_703114043",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\ndef sales_tax(postalcode,price):\n  return TaxService().calculate_sales_tax(postalcode,price)\n\nsales_tax_udf = udf(sales_tax, returnType=IntegerType())\n\nsales_with_tax_by_udf = sales_sample.withColumn(\"sales_tax\" ,sales_tax_udf(\"postalcode\",\"price\"))\n\nsc.setJobGroup(\"Partition processing\",\"Calculate the tax with a custom UDF\")\nsales_with_tax_by_udf.write.csv(\"spark-perf/sales_with_tax_udf\",mode=\"overwrite\")",
            "title": "Calculate the tax with a custom UDF",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.885",
            "dateFinished": "2020-08-21 23:07:36.712",
            "dateStarted": "2020-08-21 23:07:36.711",
            "dateUpdated": "2020-08-20 09:04:47.335",
            "errorMessage": "",
            "id": "20200726-000919_89165629",
            "jobName": "paragraph_1597930823885_358902796",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n\n## A better approach -- ``mapPartitions``\n\nThe tax service will calculate a batch of sales.\nLet's try it locally.",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.885",
            "dateFinished": "2020-08-21 23:07:37.824",
            "dateStarted": "2020-08-21 23:07:36.812",
            "dateUpdated": "2020-08-20 09:04:47.596",
            "errorMessage": "",
            "id": "20200726-000912_1611703202",
            "jobName": "paragraph_1597930823885_1785926670",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nsc.setJobGroup(\"Partition processing\",\"Inspect our sales sample\")\nbatch = sales_sample.take(5)",
            "title": "Inspect our sales sample",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": false,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.885",
            "dateFinished": "2020-08-21 23:07:38.842",
            "dateStarted": "2020-08-21 23:07:37.830",
            "dateUpdated": "2020-08-20 09:04:48.782",
            "errorMessage": "",
            "id": "20200726-001046_119018613",
            "jobName": "paragraph_1597930823885_-1551048397",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nsc.setJobGroup(\"Partition processing\",\"Calculate the tax on our sample\")\nTaxService().calculate_sales_tax_batch(batch)",
            "title": "Calculate the tax on our sample",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.886",
            "dateFinished": "2020-08-21 23:07:38.945",
            "dateStarted": "2020-08-21 23:07:38.944",
            "dateUpdated": "2020-08-20 09:04:49.939",
            "errorMessage": "",
            "id": "20200726-001312_659751878",
            "jobName": "paragraph_1597930823886_909784569",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n\nSo rather than call the service for each element, we will call it once per partition.",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/sh",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": false,
                    "language": "sh"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.886",
            "dateFinished": "2020-08-21 23:07:40.953",
            "dateStarted": "2020-08-21 23:07:39.047",
            "dateUpdated": "2020-08-20 09:04:50.086",
            "errorMessage": "",
            "id": "20200726-001415_1627981324",
            "jobName": "paragraph_1597930823886_1446976398",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%sh\n\nhdfs dfs -rm -f -r -skipTrash /user/livy/spark-perf/sales_with_tax_part",
            "title": "Clean up previous results",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": false,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false,
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.886",
            "dateFinished": "2020-08-21 23:07:41.972",
            "dateStarted": "2020-08-21 23:07:40.960",
            "dateUpdated": "2020-08-20 09:04:52.445",
            "errorMessage": "",
            "id": "20200726-001349_722445287",
            "jobName": "paragraph_1597930823886_-563572751",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\ndef addTaxes(iter):\n  return TaxService().calculate_sales_tax_batch(list(iter))\n\nsales_with_tax_rdd = sales_sample.rdd.mapPartitions(addTaxes)\n\nsc.setJobGroup(\"Partition processing\",\"Use mapPartition to calculate the tax\")\nsales_with_tax_rdd.saveAsTextFile(\"spark-perf/sales_with_tax_part\")",
            "title": "Use mapPartition to calculate the tax",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": false,
                "editorMode": "ace/mode/sh",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": false,
                    "language": "sh"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.887",
            "dateFinished": "2020-08-21 23:07:44.002",
            "dateStarted": "2020-08-21 23:07:42.067",
            "dateUpdated": "2020-08-20 09:04:53.595",
            "errorMessage": "",
            "id": "20200726-001730_1289995941",
            "jobName": "paragraph_1597930823887_-395431365",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%sh\n\nhdfs dfs -rm -f -r -skipTrash /user/livy/spark-perf/sales_with_tax_part",
            "title": "Clean up",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.887",
            "dateFinished": "2020-08-21 23:07:44.083",
            "dateStarted": "2020-08-21 23:07:44.082",
            "dateUpdated": "2020-08-20 09:04:55.962",
            "errorMessage": "",
            "id": "20200605-110208_60696362",
            "jobName": "paragraph_1597930823887_693778977",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n# Lab\n---",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.887",
            "dateFinished": "2020-08-21 23:07:44.186",
            "dateStarted": "2020-08-21 23:07:44.185",
            "dateUpdated": "2020-08-20 09:04:56.125",
            "errorMessage": "",
            "id": "20200726-001828_784714487",
            "jobName": "paragraph_1597930823887_-2144221507",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n\n## Count number of requests per day\n\n* In this exercise you will compare two approaches to counting the number of requests per day.\n  This code reads and adds a ``day`` column to the weblog data. \n  You will use this ``weblogs_with_day`` DataFrame for this exercise.",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {}
            },
            "dateCreated": "2020-08-20 06:40:23.888",
            "dateFinished": "2020-08-21 23:07:45.300",
            "dateStarted": "2020-08-21 23:07:44.288",
            "dateUpdated": "2020-08-20 09:04:56.292",
            "errorMessage": "",
            "id": "20200726-002638_1904673135",
            "jobName": "paragraph_1597930823888_37060099",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nweblogs = spark.read.table(\"sparkperf.weblogs\")\nweblogs_with_day = weblogs.withColumn(\"day\",to_date(col(\"date_time\"),\"dd/MMM/yyyy\"))\nweblogs_with_day.printSchema()\nweblogs_with_day.rdd.getNumPartitions()",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.888",
            "dateFinished": "2020-08-21 23:07:45.400",
            "dateStarted": "2020-08-21 23:07:45.399",
            "dateUpdated": "2020-08-20 09:04:57.441",
            "errorMessage": "",
            "id": "20200726-002633_1553047930",
            "jobName": "paragraph_1597930823888_-599689995",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n\n* The web logs are ingested daily.  They are already partitioned by day. \n  Use that fact and ``mapPartitions`` to calculate the number of requests per day. \n  Print out the first 10 days.\n\n* Use ``groupby`` on the DataFrame and count the group. \n  Print out the first 10 days.\n\n* Compare the performance of the two approaches.",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.889",
            "dateUpdated": "2020-08-20 09:04:57.597",
            "errorMessage": "",
            "id": "20200726-004445_1580955938",
            "jobName": "paragraph_1597930823889_1523051710",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n",
            "title": "1 - Using mapPartitions",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": false,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.889",
            "dateUpdated": "2020-08-20 09:04:57.647",
            "errorMessage": "",
            "id": "20200726-004459_1616753206",
            "jobName": "paragraph_1597930823889_-2047202489",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n",
            "title": "2 - Using GroupBy",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.889",
            "dateFinished": "2020-08-21 23:07:45.502",
            "dateStarted": "2020-08-21 23:07:45.501",
            "dateUpdated": "2020-08-20 09:04:57.694",
            "errorMessage": "",
            "id": "20200726-001833_265034082",
            "jobName": "paragraph_1597930823889_505063619",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n\n## Use ```foreachPartition``` to print the counts\n\n*   The ```foreachPartition``` method supports performing an action on each partition.\n Use it to print the counts of each partition.",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.890",
            "dateUpdated": "2020-08-20 09:04:57.851",
            "errorMessage": "",
            "id": "20200726-005032_413166746",
            "jobName": "paragraph_1597930823890_801029324",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n",
            "title": "3 - Print the partitions",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.890",
            "dateFinished": "2020-08-21 23:07:45.604",
            "dateStarted": "2020-08-21 23:07:45.603",
            "dateUpdated": "2020-08-20 09:04:57.896",
            "errorMessage": "",
            "id": "20181119-142716_792318228",
            "jobName": "paragraph_1597930823890_-323625453",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n# Result\n**You have now:** created something\n\n---",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.890",
            "dateFinished": "2020-08-21 23:07:45.707",
            "dateStarted": "2020-08-21 23:07:45.706",
            "dateUpdated": "2020-08-20 09:04:58.047",
            "errorMessage": "",
            "id": "20171113-155535_1769142099",
            "jobName": "paragraph_1597930823890_833679218",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n# Solution\n---",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": false,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.891",
            "dateFinished": "2020-08-21 23:07:47.822",
            "dateStarted": "2020-08-21 23:07:45.808",
            "dateUpdated": "2020-08-20 09:04:58.200",
            "errorMessage": "",
            "id": "20200726-004556_748710498",
            "jobName": "paragraph_1597930823891_-1860373872",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\ndef getCount(iter):\n  i=0\n  for row in iter: i=i+1\n  yield (row.day,i)\n\nsc.setJobGroup(\"Partition processing\",\"Count of weblogs per day using a mapPartitions\")\nweblogs_by_mp = weblogs_with_day.rdd.mapPartitions(getCount)\nweblogs_by_mp.take(10)",
            "title": "1 - Using mapPartitions",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.891",
            "dateFinished": "2020-08-21 23:07:59.961",
            "dateStarted": "2020-08-21 23:07:47.913",
            "dateUpdated": "2020-08-20 09:05:01.355",
            "errorMessage": "",
            "id": "20200726-004634_770158509",
            "jobName": "paragraph_1597930823891_-1937259126",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\nsc.setJobGroup(\"Partition processing\",\"Count of weblogs per day using a groupby\")\nweblogs_by_groupby = weblogs_with_day.groupby(\"day\").count().sort(\"day\")\nweblogs_by_groupby.show(10)",
            "title": "2 - Using GroupBy",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/python",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": true,
                    "editOnDblClick": false,
                    "language": "python"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.892",
            "dateFinished": "2020-08-21 23:08:09.094",
            "dateStarted": "2020-08-21 23:08:00.062",
            "dateUpdated": "2020-08-20 09:05:22.551",
            "errorMessage": "",
            "id": "20200726-004915_1466100923",
            "jobName": "paragraph_1597930823892_-454574777",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%pyspark\n\ndef printPartition(iter):\n  i=0\n  for row in iter:\n    i=i+1\n  print (str(i))\n\nsc.setJobGroup(\"Partition processing\",\"Print the partitions\")\nweblogs.foreachPartition(printPartition)",
            "title": "3 - Print the partitions",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-21 22:36:26.143",
            "dateFinished": "2020-08-21 23:08:09.192",
            "dateStarted": "2020-08-21 23:08:09.190",
            "dateUpdated": "2020-08-21 22:36:59.839",
            "errorMessage": "",
            "id": "20200821-223626_1713594154",
            "jobName": "paragraph_1598074586143_-707261303",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n# Tear Down\n---",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/sh",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": false,
                    "language": "sh"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "title": true
            },
            "dateCreated": "2020-08-21 22:36:18.779",
            "dateFinished": "2020-08-21 23:08:09.607",
            "dateStarted": "2020-08-21 23:08:09.293",
            "dateUpdated": "2020-08-21 22:36:59.697",
            "errorMessage": "",
            "id": "20200821-223618_1797293512",
            "jobName": "paragraph_1598074578779_-1134064454",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%sh\n\nsessionId=$(curl -s localhost:8998/sessions | jq '.sessions[0].id')\ncurl -s localhost:8998/sessions/$sessionId -X DELETE",
            "title": "Delete the Livy session",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.892",
            "dateFinished": "2020-08-21 23:08:09.696",
            "dateStarted": "2020-08-21 23:08:09.695",
            "dateUpdated": "2020-08-20 09:05:35.771",
            "errorMessage": "",
            "id": "20200726-000653_1473409463",
            "jobName": "paragraph_1597930823892_298264325",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\n## References\n\n[mapPartitions](https://spark.apache.org/docs/latest/api/python/pyspark.html#pyspark.RDD.mapPartitions)\n[foreachPartition](https://spark.apache.org/docs/latest/api/python/pyspark.html#pyspark.RDD.foreachPartition)",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 10,
                "editorHide": true,
                "editorMode": "ace/mode/markdown",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "markdown"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false,
                "title": true
            },
            "dateCreated": "2020-08-20 06:40:23.892",
            "dateFinished": "2020-08-21 23:08:09.798",
            "dateStarted": "2020-08-21 23:08:09.797",
            "dateUpdated": "2020-08-20 09:05:35.981",
            "errorMessage": "",
            "id": "20181116-135131_93712280",
            "jobName": "paragraph_1597930823892_305647367",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%md\nWe hope you've enjoyed this lab. Below are additional resources that you should find useful:\n\n1. [Cloudera Tutorials](http://cloudera.com/tutorials.html) are your natural next step where you can explore Spark in more depth.\n2. [Cloudera Community](https://community.cloudera.com) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Apache Spark Documentation](https://spark.apache.org/documentation.html) - official Spark documentation.\n4. [Apache Zeppelin Project Home Page](https://zeppelin.apache.org) - official Zeppelin web site.",
            "title": "Additional resources",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 2,
                "editorHide": true,
                "editorMode": "ace/mode/undefined",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "scala"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {},
                "tableHide": false
            },
            "dateCreated": "2020-08-20 06:40:23.893",
            "dateFinished": "2020-08-21 23:08:09.902",
            "dateStarted": "2020-08-21 23:08:09.900",
            "dateUpdated": "2020-08-20 09:05:36.138",
            "errorMessage": "",
            "id": "20200110-154537_1406191376",
            "jobName": "paragraph_1597930823893_-1383251917",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%angular\n</br>\n</br>\n</br>\n</br>\n<center>\n<a href=\"https://www.cloudera.com/about/training/courses.html\">\n  <img src=\"https://www.cloudera.com/content/dam/www/marketing/media-kit/logo-assets/cloudera_logo_darkorange.png\" alt=\"Cloudera University\" style=\"width:280px;height:40px;border:0;\" align=\"middle\">\n</a>\n</center>\n</br>\n</br>",
            "user": "anonymous"
        },
        {
            "apps": [],
            "config": {
                "colWidth": 12,
                "editorMode": "ace/mode/undefined",
                "editorSetting": {
                    "completionKey": "TAB",
                    "completionSupport": false,
                    "editOnDblClick": true,
                    "language": "scala"
                },
                "enabled": true,
                "fontSize": 9,
                "results": {}
            },
            "dateCreated": "2020-08-20 06:40:23.893",
            "dateUpdated": "2020-08-20 09:05:36.296",
            "errorMessage": "",
            "id": "20200110-162013_302547143",
            "jobName": "paragraph_1597930823893_1299542905",
            "progressUpdateIntervalMs": 500,
            "settings": {
                "forms": {},
                "params": {}
            },
            "status": "FINISHED",
            "text": "%angular\n",
            "user": "anonymous"
        }
    ]
}
